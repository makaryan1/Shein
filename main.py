
from flask import Flask, render_template, session, request
import json
import os
from pathlib import Path

app = Flask(__name__)
app.secret_key = 'your-secret-key-123'

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
def load_translations(lang='en'):
    try:
        with open(f'translations/{lang}.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
        with open('translations/en.json', 'r', encoding='utf-8') as f:
            return json.load(f)

# –Ø–∑—ã–∫–∏
LANGUAGES = {
    'en': {'name': 'English', 'icon': 'üá∫üá∏'},
    'ru': {'name': '–†—É—Å—Å–∫–∏–π', 'icon': 'üá∑üá∫'},
    'ka': {'name': '·É•·Éê·É†·Éó·É£·Éö·Éò', 'icon': 'üá¨üá™'}
}

# –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
PRODUCTS = [
    {"id": 1, "name": "–°–º–∞—Ä—Ç—Ñ–æ–Ω X12", "price": 299.99, "image": "https://via.placeholder.com/200x200?text=Phone", "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"},
    {"id": 2, "name": "–ù–∞—É—à–Ω–∏–∫–∏", "price": 89.99, "image": "https://via.placeholder.com/200x200?text=Headphones", "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"},
    {"id": 3, "name": "–§—É—Ç–±–æ–ª–∫–∞", "price": 19.99, "image": "https://via.placeholder.com/200x200?text=T-Shirt", "category": "–û–¥–µ–∂–¥–∞"}
]

@app.route('/')
def index():
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –∏–∑ —Å–µ—Å—Å–∏–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    current_lang = session.get('language', 'en')
    translations = load_translations(current_lang)
    
    return render_template('index.html', 
                         products=PRODUCTS,
                         cart_count=len(session.get('cart', [])),
                         _=translations,
                         current_lang=current_lang,
                         languages=LANGUAGES)

@app.route('/set_language/<language>')
def set_language(language):
    if language in LANGUAGES:
        session['language'] = language
    return redirect(url_for('index'))

@app.route('/cart')
def cart():
    current_lang = session.get('language', 'en')
    translations = load_translations(current_lang)
    cart = session.get('cart', [])
    cart_items = [p for p in PRODUCTS if str(p['id']) in cart]
    return render_template('cart.html', 
                         cart=cart_items,
                         _=translations,
                         current_lang=current_lang,
                         languages=LANGUAGES)

@app.route('/add_to_cart/<int:product_id>')
def add_to_cart(product_id):
    if 'cart' not in session:
        session['cart'] = []
    session['cart'].append(str(product_id))
    return redirect(url_for('index'))

@app.route('/clear_cart')
def clear_cart():
    session.pop('cart', None)
    return redirect(url_for('cart'))

if __name__ == '__main__':
    from flask import redirect, url_for
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    Path("templates").mkdir(exist_ok=True)
    Path("static/images").mkdir(exist_ok=True, parents=True)
    Path("translations").mkdir(exist_ok=True)

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if not os.path.exists('translations/en.json'):
        with open('translations/en.json', 'w', encoding='utf-8') as f:
            json.dump({
                "Online Shopping": "Online Shopping",
                "Categories": "Categories",
                "Add to Cart": "Add to Cart"
            }, f, ensure_ascii=False, indent=2)

    if not os.path.exists('translations/ru.json'):
        with open('translations/ru.json', 'w', encoding='utf-8') as f:
            json.dump({
                "Online Shopping": "–û–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω",
                "Categories": "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", 
                "Add to Cart": "–í –∫–æ—Ä–∑–∏–Ω—É"
            }, f, ensure_ascii=False, indent=2)

    app.run(host='0.0.0.0', port=5000, debug=True)
